/*
 *  test_threaded_spike_recorder.sli
 *
 *  This file is part of NEST.
 *
 *  Copyright (C) 2004 The NEST Initiative
 *
 *  NEST is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  NEST is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with NEST.  If not, see <http://www.gnu.org/licenses/>.
 *
 */


/* BeginDocumentation
   Name: testsuite::test_threaded_spike_recorder - test support for spike_recorder

   Synopsis: (test_threaded_spike_recorder.sli) run -> dies if assertion fails

   Description:
   Tests that spike_recorder works when we use threads.

   Author: Stine B. Vennemo
   FirstVersion: June 2017
   SeeAlso: test_threaded_multimeter.sli
*/

(unittest) run
/unittest using

skip_if_not_threaded

M_ERROR setverbosity

/run_sr
{
  << >> begin
    /n_threads Set

    /N 10 def  % should not be divisible by thread number
  
    ResetKernel
    GetKernelStatus /num_processes get 1 eq assert % distributed setting not covered
    << /local_num_threads n_threads >> SetKernelStatus

    % actual neurons
    /nrns /iaf_psc_alpha N << /I_e 376. >> Create def

    % spike_recorder
    /sr  /spike_recorder Create def

    nrns sr Connect

    200. Simulate

    % obtain data 
    sr /events get dup /times get cva exch /senders get cva
  end
}
def

{
  << >> begin
  1 run_sr /r1s Set /r1t Set
  3 run_sr /r3s Set /r3t Set
 
  r1t Sort r3t Sort eq
  r1s Sort r3s Sort eq
 
  end
} assert_or_die


endusing
