/*
 *  test_spike_rec_reset.sli
 *
 *  This file is part of NEST.
 *
 *  Copyright (C) 2004 The NEST Initiative
 *
 *  NEST is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  NEST is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with NEST.  If not, see <http://www.gnu.org/licenses/>.
 *
 */


 /** @BeginDocumentation
Name: testsuite::test_spike_rec_reset - test if resetting works on spike_recorder

Synopsis: (test_spike_rec_reset) run -> dies if assertion fails

Description:
	Feeds spike recorder with given set of spikes, checks if they
	are recorded properly to memory, then resets, then records a
	few more and checks.

Author: August 2008, Plesser
SeeAlso: spike_recorder
*/

(unittest) run
/unittest using

{
  ResetKernel

  /spike_generator Create /sg Set
  sg << /precise_times false /spike_times [ 10. 200. 10. ] Range >> SetStatus

  /spike_recorder Create /sr Set

  sg sr Connect

  /res [] def  % array to collect bool results

  105 Simulate  % should record spikes 10..100 -> 10 spikes
  sr [ /n_events ] get                   10 eq res exch append /res Set
  sr [ /events /senders ] get cva length 10 eq res exch append /res Set
  sr [ /events /times   ] get cva length 10 eq res exch append /res Set

  % reset
  sr << /n_events 0 >> SetStatus
  sr [ /n_events ] get                   0 eq res exch append /res Set
  sr [ /events /senders ] get cva length 0 eq res exch append /res Set
  sr [ /events /times   ] get cva length 0 eq res exch append /res Set

  % simulate more, till 160
  55 Simulate % spikes 110 .. 160 -> 6 spikes
  sr [ /n_events ] get                   6 eq res exch append /res Set
  sr [ /events /senders ] get cva length 6 eq res exch append /res Set
  sr [ /events /times   ] get cva length 6 eq res exch append /res Set

  % combine results
  res First res Rest { and } Fold

} assert_or_die

endusing
