Loading BaseGPU/2022
  Loading requirement: nvhpc/22.2 cuda/11.6 openmpi/4.0.5cu11.6
/opt/pyenv/versions/3.10.7/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3432: RuntimeWarning:Mean of empty slice.
/opt/pyenv/versions/3.10.7/lib/python3.10/site-packages/numpy/core/_methods.py:190: RuntimeWarning:invalid value encountered in double_scalars
/sqfs2/cmc/1/work/G15417/u6b671/nest-gpu/ngpu_multi_area_model_simulation/multi-area-model-ngpu/multiarea_model/data_multiarea/Model.py:1110: FutureWarning:`rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.
To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.

real	0m20.991s
user	0m14.154s
sys	0m6.640s
Traceback (most recent call last):
  File "/sqfs2/cmc/1/work/G15417/u6b671/nest-gpu/ngpu_multi_area_model_simulation/multi-area-model-ngpu/run_simulation.py", line 67, in <module>
    main()
  File "/sqfs2/cmc/1/work/G15417/u6b671/nest-gpu/ngpu_multi_area_model_simulation/multi-area-model-ngpu/run_simulation.py", line 61, in main
    simulation(label)
  File "/sqfs2/cmc/1/work/G15417/u6b671/nest-gpu/ngpu_multi_area_model_simulation/multi-area-model-ngpu/run_simulation.py", line 53, in simulation
    M = MultiAreaModel(label=label, network_spec=label, simulation=True, sim_spec=label)
  File "/sqfs2/cmc/1/work/G15417/u6b671/nest-gpu/ngpu_multi_area_model_simulation/multi-area-model-ngpu/multiarea_model/multiarea_model.py", line 206, in __init__
    self.init_simulation(self.label, sim_spec)
  File "/sqfs2/cmc/1/work/G15417/u6b671/nest-gpu/ngpu_multi_area_model_simulation/multi-area-model-ngpu/multiarea_model/multiarea_model.py", line 231, in init_simulation
    self.simulation = Simulation(label=label, network=self, sim_spec=sim_spec)
  File "/sqfs2/cmc/1/work/G15417/u6b671/nest-gpu/ngpu_multi_area_model_simulation/multi-area-model-ngpu/multiarea_model/simulation.py", line 70, in __init__
    self.custom_params = json.load(f)["sim_params"]
  File "/opt/pyenv/versions/3.10.7/lib/python3.10/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/opt/pyenv/versions/3.10.7/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/opt/pyenv/versions/3.10.7/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/opt/pyenv/versions/3.10.7/lib/python3.10/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

real	1m54.777s
user	0m0.046s
sys	0m0.114s
